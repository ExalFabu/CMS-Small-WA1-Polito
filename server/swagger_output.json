{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "CMSmall",
    "description": "CMSmall by ExalFabu API Documentation "
  },
  "host": "localhost:3001",
  "basePath": "/api/",
  "tags": [
    {
      "name": "User",
      "description": "Authentication and User related"
    },
    {
      "name": "Pages",
      "description": "Pages and blocks manipulation"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "CookieAuth": {
      "type": "apiKey",
      "in": "cookie",
      "name": "connect.sid"
    }
  },
  "paths": {
    "/meta/name": {
      "get": {
        "tags": [
          "Site"
        ],
        "description": "Endpoint to get the site name",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Site name successfully retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "CMSmall"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Site"
        ],
        "description": "Endpoint to update the site name",
        "parameters": [
          {
            "name": "Site",
            "in": "body",
            "description": "Site name to update",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "CMSmall"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Site name successfully updated"
          },
          "401": {
            "description": "Not authorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error while updating site name",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/meta/editors": {
      "get": {
        "tags": [
          "Site"
        ],
        "description": "Endpoint to get all editors",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Users successfully retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/meta/images": {
      "get": {
        "tags": [
          "Site"
        ],
        "description": "Endpoint to get all images",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Images successfully retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "image.png"
                },
                "path": {
                  "type": "string",
                  "example": "images/image.png"
                }
              },
              "required": [
                "name",
                "path"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to perform login",
        "parameters": [
          {
            "name": "Credentials",
            "in": "body",
            "description": "Credential to use for login",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "buffa@test.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "description": "Cookie with session id"
              }
            }
          },
          "401": {
            "description": "Wrong credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get the current logged in user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "User not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Not logged in"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to logout the current logged in user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User successfully logged out"
          },
          "401": {
            "description": "User not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Not authenticated"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/pages/": {
      "get": {
        "tags": [
          "Pages"
        ],
        "description": "Endpoint to get all pages",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of PageHead objects",
            "type": "array",
            "items": {
              "$ref": "#/definitions/PageHead"
            },
            "collectionFormat": "multi"
          }
        }
      },
      "post": {
        "tags": [
          "Pages"
        ],
        "description": "Endpoint to create a new page",
        "parameters": [
          {
            "name": "page",
            "in": "body",
            "description": "Page object to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page object",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "403": {
            "description": "You are not allowed to create a page",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error adding page to database",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pages/{id}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "description": "Endpoint to get a page by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Page id"
          }
        ],
        "responses": {
          "200": {
            "description": "Page object",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Error retrieving page from database",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Pages"
        ],
        "description": "Endpoint to update a page metadata by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Page id"
          },
          {
            "name": "page",
            "in": "body",
            "description": "Page object to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PageHead"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page object",
            "schema": {
              "$ref": "#/definitions/PageHead"
            }
          },
          "403": {
            "description": "You are not allowed to edit this page",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error updating page",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Pages"
        ],
        "description": "Endpoint to delete a page and all its blocks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Error message"
        },
        "details": {
          "type": "string",
          "example": "Error details"
        }
      },
      "required": [
        "error"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "username": {
          "type": "string",
          "example": "buffa@test.com"
        },
        "name": {
          "type": "string",
          "example": "Buffa"
        },
        "role": {
          "type": "string",
          "example": "admin"
        }
      },
      "required": [
        "username",
        "name",
        "role"
      ]
    },
    "PageHead": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "title": {
          "type": "string",
          "example": "Page Title"
        },
        "created_at": {
          "type": "string",
          "example": "2021-01-01T00:00:00.000Z"
        },
        "published_at": {
          "type": "string",
          "example": "2021-01-01T00:00:00.000Z"
        },
        "author": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "title",
        "created_at",
        "author"
      ]
    },
    "Block": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "type": {
          "type": "string",
          "example": "header"
        },
        "content": {
          "type": "string",
          "example": "Header content"
        },
        "page_id": {
          "type": "number",
          "example": 1
        },
        "order": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "type",
        "content",
        "page_id",
        "order"
      ]
    },
    "Page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "title": {
          "type": "string",
          "example": "Page Title"
        },
        "created_at": {
          "type": "string",
          "example": "2021-01-01T00:00:00.000Z"
        },
        "published_at": {
          "type": "string",
          "example": "2021-01-01T00:00:00.000Z"
        },
        "author": {
          "type": "number",
          "example": 1
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Block"
          }
        }
      },
      "required": [
        "title",
        "created_at",
        "author"
      ]
    }
  }
}